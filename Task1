#!/bin/bash

# Command name and version
command_name="internsctl"
command_version="v0.1.0"

# Function to display the manual page
display_manual() {
    echo "MANUAL PAGE"
    echo "------------"
    echo "NAME"
    echo "    $command_name - custom Linux command"
    echo ""
    echo "SYNOPSIS"
    echo "    $command_name [OPTIONS] [SUBCOMMAND] [ARGUMENTS]"
    echo ""
    echo "DESCRIPTION"
    echo "    This command provides various operations for server management."
    echo ""
    echo "OPTIONS"
    echo "    --help      Display this help message"
    echo "    --version   Display the version of $command_name"
    echo ""
    echo "SUBCOMMANDS"
    echo "    cpu         Get CPU information"
    echo "    memory      Get memory information"
    echo "    user        Manage users"
    echo "    file        Get information about a file"
    echo "        Options:"
    echo "            --size, -s          Print file size"
    echo "            --permissions, -p   Print file permissions"
    echo "            --owner, -o         Print file owner"
    echo "            --last-modified, -m Print last modified time"
    echo ""
}

# Function to display help information
display_help() {
    echo "HELP"
    echo "----"
    echo "Usage: $command_name [OPTIONS] [SUBCOMMAND] [ARGUMENTS]"
    echo ""
    echo "Options:"
    echo "    --help      Display this help message"
    echo "    --version   Display the version of $command_name"
    echo ""
    echo "Subcommands:"
    echo "    cpu getinfo              Get CPU information"
    echo "    memory getinfo           Get memory information"
    echo "    user create <username>   Create a new user"
    echo "    user list                List all regular users"
    echo "    user list --sudo-only    List users with sudo permissions"
    echo "    file getinfo <file-name> Get information about a file"
    echo "        Options:"
    echo "            --size, -s          Print file size"
    echo "            --permissions, -p   Print file permissions"
    echo "            --owner, -o         Print file owner"
    echo "            --last-modified, -m Print last modified time"
    echo ""
}

# Function to get CPU information
get_cpu_info() {
    lscpu
}

# Function to get memory information
get_memory_info() {
    free
}

# Function to create a new user
create_user() {
    if [ -z "$2" ]; then
        echo "Error: Missing username. Usage: $command_name user create <username>"
        exit 1
    fi

    username="$2"
    sudo useradd -m -s /bin/bash "$username"
    echo "User '$username' created successfully."
}

# Function to list users
list_users() {
    if [ "$2" == "--sudo-only" ]; then
        getent group sudo | cut -d: -f4
    else
        cut -d: -f1 /etc/passwd
    fi
}

# Function to get file information
get_file_info() {
    if [ -z "$2" ]; then
        echo "Error: Missing file name. Usage: $command_name file getinfo <file-name> [options]"
        exit 1
    fi

    filename="$2"

    # Check options
    case "$3" in
        --size | -s)
            stat -c%s "$filename"
            ;;
        --permissions | -p)
            stat -c%a "$filename"
            ;;
        --owner | -o)
            stat -c%U "$filename"
            ;;
        --last-modified | -m)
            stat -c%y "$filename"
            ;;
        *)
            # Default output
            echo "File: $filename"
            stat -c "Access: %A%nSize(B): %s%nOwner: %U%nModify: %y" "$filename"
            ;;
    esac
}

# Parse command line arguments
case "$1" in
    --help)
        display_help
        ;;
    --version)
        echo "$command_name $command_version"
        ;;
    cpu)
        get_cpu_info
        ;;
    memory)
        get_memory_info
        ;;
    user)
        shift
        case "$1" in
            create)
                create_user "$@"
                ;;
            list)
                list_users "$@"
                ;;
            *)
                echo "Error: Unknown user subcommand '$1'."
                exit 1
                ;;
        esac
        ;;
    file)
        shift
        get_file_info "$@"
        ;;
    *)
        display_manual
        ;;
esac
